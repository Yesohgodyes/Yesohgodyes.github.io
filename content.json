{"meta":{"title":"AlkalineSoil's Blog","subtitle":"","description":"","author":"碱土","url":"https://yesohgodyes.github.io","root":"/"},"pages":[{"title":"search","date":"2020-01-22T08:42:28.000Z","updated":"2020-01-22T08:42:28.242Z","comments":true,"path":"search/index.html","permalink":"https://yesohgodyes.github.io/search/index.html","excerpt":"","text":""},{"title":"404","date":"2020-01-22T08:42:41.000Z","updated":"2020-01-22T08:42:41.413Z","comments":true,"path":"404/index.html","permalink":"https://yesohgodyes.github.io/404/index.html","excerpt":"","text":""}],"posts":[{"title":"Markdown语法","slug":"Markdown","date":"2018-07-20T09:20:32.000Z","updated":"2020-01-23T10:14:16.999Z","comments":true,"path":"2018/07/20/Markdown/","link":"","permalink":"https://yesohgodyes.github.io/2018/07/20/Markdown/","excerpt":"","text":"#标题 123456# 一级标题## 二级标题### 三级标题#### 四级标题##### 五级标题###### 六级标题 #字体 12345*斜体*_斜体_**粗体*****加粗斜体***~~删除线~~ #分割线输入下面的符号，然后回车即可显示 123---___*** 效果演示： #列表###无序列表 123+ 这是无序列表- 这是无序列表* 这是无序列表 效果使用+、-、*表示无序列表效果演示： 这是无序列表 这是无序列表 这是无序列表###有序列表有序列表则使用数字，其后接着一个英文句点。1231. 这是有序列表一2. 这是有序列表二3. 这是有序列表三 效果演示： 这是有序列表一 这是有序列表二 这是有序列表三###多级无序列表 1234+ 第一层无序列表 + 第二层无序列表 + 第三层无序列表 + ...... 效果演示： 第一层无序列表 第二层无序列表 第三层无序列表 …… ###多级有序列表 12341\\. 第一层无序列表 1\\. 第二层无序列表 1\\. 第三层无序列表 1\\. ...... 效果演示： 第一层有序列表 第二层有序列表 第三层有序列表 ……#超链接 行内式使用方法：链接文字 链接地址与链接文字描述之间有空格。例：欢迎来到我的个人博客-碱土 自动链接Markdown 支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用&lt;&gt;包起来，Markdown 就会自动把它转成链接。一般网址的链接文字就和链接地址一样，12&lt;https:&#x2F;&#x2F;yesohgodyes.github.io&#x2F;&gt;&lt;https:&#x2F;&#x2F;yesohgodyes.github.io&#x2F;2018&#x2F;07&#x2F;13&#x2F;hello-world&#x2F;&gt; 效果演示： https://yesohgodyes.github.io/https://yesohgodyes.github.io/2018/07/13/hello-world/ #图片图片的语法和超链接的写法类似，只不过多了一个! 12![图片描述](图片地址) 例：![图片名](图片地址) #文字引用 1234567&gt; 这是第一层引用&gt; &gt; 这是第二层引用 &gt; &gt;&gt; &gt; 同级跳不出去&gt; &gt; &gt; 这是第三层引用 &gt;&gt; 这是第一层引用 效果演示： 这是第一层引用 这是第二层引用 同级跳不出去 这是第三层引用 这是第一层引用#表格 1234567# 语法使用： |表格一|表格二|表格三| |---|---:|:---:| |左对齐|右对齐|居中对齐| # 解释： |---|：表示左对齐 |---:|：表示右对齐 |:---:|：表示居中对齐 #代码块 行内代码块使用两个” ` “表示。 多行代码块使用三个 “ ` “表示。效果演示： ` 这是行内代码块 12345678910#这是多行代码块 #背景canvas-nestcanvas_nest: enable: false color: 0,0,255 # 线条颜色, 默认: &#39;0,0,0&#39; ；三个数字分别为(R,G,B)，注意用,分割 pointColor: 0,0,255 # 交点颜色, 默认: &#39;0,0,0&#39; ；三个数字分别为(R,G,B)，注意用,分割 opacity: 0.7 # 线条透明度（0~1）, 默认: 0.5 zIndex: -1 # 背景的 z-index 属性，css 属性用于控制所在层的位置, 默认: -1. count: 99 # 线条的总数量, 默认: 99","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2018-07-13T12:46:25.000Z","updated":"2020-01-22T09:12:27.316Z","comments":true,"path":"2018/07/13/hello-world/","link":"","permalink":"https://yesohgodyes.github.io/2018/07/13/hello-world/","excerpt":"","text":"测试文章 Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}]}